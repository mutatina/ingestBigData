import subprocess
#Given table infomation in a Dictionary type, this function creates a job.property file.

def createPropertyfile(tableInfoDictionary):

	outputFileString =tableInfoDictionary['target_table']+".properties"
	outputFile= open(outputFileString,'w')
	requiredString ="""nameNode=hdfs://quickstart.cloudera:8020\njobTracker=quickstart.cloudera:8032\noozie.wf.application.path=${nameNode}/user/cloudera/oozie/ingestWorkflow.xml\noozie.use.system.libpath=true\n"""

	outputFile.write(requiredString)
	for key,value in tableInfoDictionary.iteritems():
       		outputFile.write(key +'='+ value +'\n')	
	outputFile.close()
	return


# Given table name this function will run the two hql files(stg & parquet) for the table in the hive shell

def createTableInHive(table_name):

	stageHqlfileLocation = '/home/cloudera/hive/create_' + table_name + '_stg.hql'
	parquetHqlfileLocation ='/home/cloudera/hive/create_' + table_name + '_parquet.hql'

	fileList=[stageHqlfileLocation,parquetHqlfileLocation]
	for _file in fileList:
		hiveCommand = "hive -f " + _file
		
		try:
			subprocess.check_call(hiveCommand,shell=True)
		except subprocess.CalledProcessError, e:
			print ("ERROR :Could not create the Table with "+_file)
			
		else:
			print "Table created succesfully"



def runIngestWorkflow(table_name):

	propertiesFileLocationPath = table_name + ".properties"
	#oozieCommand = "export OOZIE_URL=http://localhost:11000/oozie" + "\n" + "oozie job -config "+propertiesFileLocationPath +" -run"
	oozieCommand =	"oozie job -oozie http://localhost:11000/oozie -config "+propertiesFileLocationPath +" -run"
	try:
		subprocess.check_call(oozieCommand,shell=True)
	except subprocess.CalledProcessError, e:
		print ("ERROR Could not run the oozie workflow for table :"+table_name)
			
	else:
		print ("Ozzie job succesfully submitted for table : "+table_name)




# Handy utitlity to clean/remove the extra partition column line in HQL files:
def cleanPartitionCol(table_name,partition_col):
	stageHqlfileLocation = '/home/cloudera/hive/create_' + table_name + '_stg.hql'
	parquetHqlfileLocation ='/home/cloudera/hive/create_' + table_name + '_parquet.hql'

	fileList=[stageHqlfileLocation,parquetHqlfileLocation]
	for _file in fileList:
		f = open(_file)
		file_str = f.read() 
		f.close()
		file_str_temp=file_str.lower()
		
		extraLineStarts= file_str_temp.find(partition_col.lower()) - 1 
		extraLineEnds= extraLineStarts + file_str_temp[extraLineStarts:].find('\n')  + 1
		
		extraLine =file_str_temp[extraLineStarts:extraLineEnds]
		print "Removing: "+ extraLine + 'from file '+ _file
		file_str=file_str.replace(file_str[extraLineStarts:extraLineEnds],"")
	
		f = open(_file, 'w') 
		f.write(file_str)
		f.close()





